{
	"tabString":"\t",
	"savedCommands":[
		{"name":"letterb","commands":[
			{"name":"rep","args":["{{replaceWhat}}","b"]}
			],"parameters":[
			{"name":"replaceWhat","defaultValue":null}
				]
		},
		{"name":"hamburger","description":"hungry?","commands":[
			{"name":"settext","args":["üçî"]}
		]},
		{"name":"numlist","description":"List of numbers with parenthesis around it","commands":[
			{"name":"rep","args":["[^\\d\\.\\-]+", ","],"description":"replace all non-digits with commas"},
			{"name":"rep","args":["[,]+", ","],"description":"replace multiple commas with single ones"},
			{"name":"rep","args":["^,", ""],"description":"remove leading commas"},
			{"name":"rep","args":[",$", ""],"description":"remove trailing commas"},
			{"name":"rep","args":["(.|\n)+", "($&)"],"description":"put parenthesis around everything"},
			{"name":"rep","args":["(.{80,90},)", "$1\n"],"description":"keep the line length sensible"}
		]},
		{"name":"smash","description":"smashes empty lines","commands":[
			{"name":"rep","args":["\n\\s*", "\n"]}
		]},
		{"name":"hulksmash","description":"smash it down to one line","commands":[
			{"name":"smash","args":[]},
			{"name":"rep","args":["\\s*\n\\s*", ""]}
		]},
		{"name":"entab","description":"converts spaces to tabs","commands":[
			{"name":"rep","args":["    ", "\t"]}
		]},
		{"name":"detab","description":"converts tabs to spaces","commands":[
			{"name":"rep","args":["\t", "    "]}
		]},
		{"name":"sqlsafe","description":"replaces apostrophes with two apostrophes","commands":[
			{"name":"rep","args":["'","''"]}
		]},
		{"name":"sqlunsafe","description":"replaces two apostrophes with one apostrophe","commands":[
			{"name":"rep","args":["''","'"]}
		]},
		{"name":"list","description":"replaces new lines with commas","commands":[
			{"name":"rep","args":["\n+", ","]}
		]},
		{"name":"strlist","description":"Same as \"list\" but adds apostrophes around the list items","commands":[
			{"name":"smash","args":[]},
			{"name":"rep","args":[ "'","''"],"description":"convert singe apos to escaped"},
			{"name":"rep","args":["\n","','"],"description":"each line is a string"},
			{"name":"rep","args":["[\\d\\D]+","('$&')"],"description":"put parens around everything"},
			{"name":"rep","args":[".{80,140},","$&\n"],"description":"keep the line length sensible"}
		]},
		{"name":"trimlines","description":"Removes whitespace at the end of the line","commands":[
			{"name":"rep","args":["[ \t]+$","","-mig"]}
		]},
		{"name":"doublequote","description":"quotation mark to double quotation mark","commands":[
			{"name":"rep","args":["\"","\"\""]}
		]},
		{"name":"GuidList","description":"Gets a list of Guid's separated by commas, enclosed in apostrophes","commands":[
			{"name":"grep","args":["[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}","','"]},
			{"name":"dedup","args":["','"]},
			{"name":"rep","args":["^((.|\n)+)$","('$1')"]},
			{"name":"rep","args":["[\\da-f\\-',]{194},","$0\n"]}
		]},
		{"name":"mdtable","description":"tables into markdown tables","commands":[
			{"name":"rep","args":["([ ]{2,}|\t+)","\t|\t"]},
			{"name":"rep","args":["^.+$","| $&\t|","-m"]},
			{"name":"rep","args":["^.+","$&\n|------|"]},
			{"name":"columnAlign","args":["1"]}
		]}
		,{"name":"sprocme","description":"turn query into stored procedure","commands":[
			{"name":"rep","args":["(.|\n)+", "USE [{{Database}}]\nGO\n\nIF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{Stored Procedure Name}}]') AND type in (N'P', N'PC'))\nDROP PROCEDURE [dbo].[{{Stored Procedure Name}}]\nGO\n\nUSE [{{Database}}]\nGO\n\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE PROCEDURE [dbo].[{{Stored Procedure Name}}]\n@VARS\nAS\nBEGIN\n\n$1\n\nEND\nGO\n\nGRANT EXECUTE ON [dbo].[{{Stored Procedure Name}}] TO [DBRole_GISWEBUsers] AS [dbo]\nGO\n"]}
		], "parameters":[
			{"name":"Database", "defaultValue":null},
			{"name":"Stored Procedure Name", "defaultValue":null}
		]}
		,{"name":"messagelog", "description":"formats a log I normally see","commands":[
			{"name":"rep", "args":["(\\w+\\[)([^\\]]{20,})", "$1\n$2"]},
			{"name":"rep", "args":["([^\\[]{20,})(\\])", "$1\n$2"]},
			{"name":"rep", "args":["(\\])\\s*", "$1\n"]},
			{"name":"xml", "args":[]}
		]}
		,{"name":"unregion", "description":"I hate regions in code","commands":[
			{"name":"rep", "args":["#region(.*)","//$1"]},
			{"name":"rep", "args":["#endregion.*\n",""]}
		]}
		,{"name":"crver", "description":"CR Verification","commands":[
			{"name":"settext","args":["## Verification Plan Details:\n * What should be tested and who will do the testing\n\n## Monitoring Plan Details;\n  * Details on monitoring the change for any negative effects\n\n## Risk and Impact of the code move:\n  * Systems Impacted\n  * Customers Impacted\n  * Operations Impact\n  * Security Risk or Impact\n  * Other\n"]}
		]}
		,{"name":"xslt", "description":"boilerplate xslt 1.0", "commands":[
			{"name":"settext", "args":["<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\n\t<xsl:output indent=\"yes\" method=\"xml\" version=\"1.0\" encoding=\"UTF-8\"/>\n\t<xsl:template match=\"@* | node()\">\n\t\t<xsl:copy>\n\t\t\t<xsl:apply-templates select=\"@* | node()\"/>\n\t\txsl:copy>\n\tsl:template>\n</xsl:stylesheet>\n"]}
		]}
		,{"name":"addcolumn", "description":"Add column to table","commands":[
			{"name":"settext","args":["if exists(select 1 from syscolumns where id=object_id('{{Table Name}}_base') and name='{{Column Name}}')\nbegin\nAlter table {{Table Name}}_base drop {{Column Name}}\nend\nif exists(select 1 from syscolumns where id=object_id('{{Table Name}}_base_audit') and name='{{Column Name}}')\nbegin\nAlter table {{Table Name}}_base_audit drop {{Column Name}}\nend\n\nAlter table {{Table Name}}_base Add {{Column Name}} varchar(50) NULL\nAlter table {{Table Name}}_base_audit Add {{Column Name}} varchar(50) NULL"]}
		],"parameters":[
			{"name":"Table Name", "defaultValue":null},
			{"name":"Column Name", "defaultValue":null}
		]}
		,{"name":"connString", "description":"Generates a SQL Server connection string", "commands":[
			{"name":"settext","args":["Data Source={{Server}};Initial Catalog={{Database}};Integrated Security=True;Application Name={{Application Name}};"]}
		],"parameters":[
			{"name":"Server", "defaultValue":null},
			{"name":"Database", "defaultValue":null},
			{"name":"Application Name", "defaultValue":null}
		]}
		,{"name":"deadcode", "description":"The dead code GUID", "commands":[
			{"name":"settext", "args":["00000000-DEAD-C0DE-0000-000000000000"]}
		]}
	]
}
